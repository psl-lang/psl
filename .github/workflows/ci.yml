on:
  pull_request:
    types: [opened, synchronize, reopened]

name: CI

jobs:
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: reviewdog/action-setup@v1
      - name: check clippy
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cargo clippy \
            -q --message-format short \
            --workspace \
            -- -Dwarnings \
            2>&1 \
            | reviewdog \
            -f=clippy \
            -name=clippy \
            -reporter=github-pr-review \
            -filter-mode=nofilter \
            -fail-on-error=true
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          components: cargo, rustfmt
      - uses: reviewdog/action-setup@v1
      - name: check rustfmt
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cargo +nightly fmt \
            -- --emit checkstyle \
            | reviewdog \
            -f=checkstyle \
            -name=rustfmt \
            -reporter=github-pr-review \
            -filter-mode=nofilter \
            -fail-on-error=true
  test-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-x86_64-unknown-linux-gnu.tar.bz2 | tar jxf -
      - run: LLVM_PROFILE_FILE="grcov-%p-%m.profraw" RUSTFLAGS="-Cinstrument-coverage" cargo test
      - run: ./grcov --ignore-not-existing --binary-path ./target/debug -o lcov.info -s . .
      - uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          fail_ci_if_error: true
          verbose: true
